install.package("quantmod")
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
View(amzn)
grep("^2012",amazn$row.names, value=T)
grep("^2012",amzn$row.names, value=T)
grep("2012",amzn$row.names, value=T)
class(amzn$row.name)
class(amzn$row.names)
amzn$row.name
amzn$row.names
amzn[,1]
libray(lubridate)
library(lubridate)
install.packages("lubridate")
library(lubridate)
ymd(amzn$row.names)
amzn[,1]
gsub(" ", "", amzn$row.names)
splitdate = strsplit(amzn$row.names, "\\ ")
class(amzn$row.names)
format(amzn$row.names, "%Y a%")
splitdate = strsplit(amzn$row.names, " ")
splitdate = strsplit(amzn$row.names, "")
splitdate <- strsplit(amzn$row.names, "")
splitdate <- strsplit(as.character(amzn$row.names), "")
strsplit(as.character(amzn$row.names), "")
as.character(amzn$row.names)
amzn$row.names
strsplit(as.character(amzn[,1]), "")
strsplit(as.character(amzn[,1]), " ")
View(amzn)
View(amzn)
strsplit(as.character(amzn[,1]), " ")[1]
amzn = getSymbols("AMZN",auto.assign=FALSE)
View(amzn)
View(amzn)
View(amzn)
View(amzn)
View(amzn)
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
View(amzn)
edit(amzn)
edit(amzn)
edit(amzn)
amzn[,1]
strsplit(as.character(amzn[,1]), " ")[1]
strsplit(as.character(amzn[,1]), " ")
format(amzn[,1], "%y")
edit(amzn)
format(amzn[,1], "%a %b %d")
class(amzn[,1])
grep("^2012",amzn$row.names, value=T)
grep("^2012",amzn[,1], value=T)
amzn
head(amzn)
amzn["20120101/20121231"]
which(amzn["20120101/20121231"])
count(amzn["20120101/20121231"])
data12<-amzn["20120101/20121231"]
data12
class(data12)
data12<-as.data.frame(amzn["20120101/20121231"])
View(data12)
class(data12)
colnames(data12)
data12
edit(data12)
edit(data12)
data12[,1]
library(lubridate)
data12$row.names
parse_date_time(data12[,1], "ymd")
parse_date_time(data12[,1], "mdy")
dates<-data12[,1]
dates
parse_date_time(dates, "mdy")
class(date)
as.character(date)
date<-as.character(date)
date<-as.character(dates)
date
parse_date_time(dates, "mdy")
parse_date_time(date, "mdy")
class(dates)
class(date)
format(date, "%a %b %d")
format(date, "%a %b %d")
as.date(date)
amzn
data12<-as.data.frame(amzn["20120101/20121231"])
data12
View(data12)
data12$row.names
colname[data12][1]<-dates
colnames[data12][1]<-dates
colnames(data12)[1]<-dates
colnames(data12)[1]<-"dates""
colnames(data12)[1]<-"dates"
data12
View(amzn)
View(amzn)
data12<-as.data.frame(index(amzn["20120101/20121231"])
data12<-as.data.frame(index(amzn["20120101/20121231"]))
data12
format(date12, "%a %b %d")
format(data12, "%a %b %d")
data12<-format(data12, "%a %b %d")
data12
grep("^[Mm][Oo][Nn]", data12)
grep("^[Mm]on", data12)
grep("^[Mm]on",data12)
grep("^[Mm]on",as.character(data12)
grep("^[Mm]on",as.character(data12))
class(data12)
data12
data12<-index(amzn["20120101/20121231"]
data12<-index(amzn["20120101/20121231"])
data12
ymd(data12)
w(data12)
parse_date_time(data12, w)
parse_date_time(data12, "w"")
parse_date_time(data12, "w)
parse_date_time(data12, "w")
parse_date_time(data12, c("ymd", "w"))
parse_date_time(data12, c("w"))
parse_date_time(data12, c("d!"))
wday(data12, label = TRUE)
days12<-as.character(wday(data12, label = TRUE))
days12
grep("Mon", days12)
table(grep("Mon", days12))
freq(grep("Mon", days12))
frequency(grep("Mon", days12))
table(grep("Mon", days12))
mondays<-grep("Mon", days12))
mondays<-grep("Mon", days12)
mondays
savehistory(file="~/Getting and Cleaning Data/quiz5history.Rhistory")
table(mondays)
length(mondays)
download.file("https://github.com/tariyaratne/RepData_PeerAssessment1/blob/master/activity.zip",temp, mode="wb")
unzip(temp, "activity.csv")
data1 <- read.csv("activity.csv", header=T)
temp <- tempfile()
download.file("https://github.com/tariyaratne/RepData_PeerAssessment1/blob/master/activity.zip",temp, mode="wb")
unzip(temp, "activity.csv")
data1 <- read.csv("activity.csv", header=T)
temp <- tempfile()
download.file("https://github.com/tariyaratne/RepData_PeerAssessment1/blob/master/activity.zip",temp, mode="wb")
unzdata<- unzip(temp, "activity.csv")
data1 <- read.csv(unzdata, header=T)
temp <- tempfile()
download.file("https://github.com/tariyaratne/RepData_PeerAssessment1/blob/master/activity.zip",temp, mode="wb")
unzdata<- unzip(temp, "activity.csv")
data1 <- read.table(unzdata, header=T,sep=",")
unlink(temp)
temp <- tempfile()
download.file(""https://github.com/tariyaratne/RepData_PeerAssessment1/blob/master/activity.zip",temp)
data <- read.table(unz(temp, "activity.csv"))
unlink(temp)
temp <- tempfile()
download.file("https://github.com/tariyaratne/RepData_PeerAssessment1/blob/master/activity.zip",temp)
data <- read.table(unz(temp, "activity.csv"))
unlink(temp)
temp <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip",temp)
data <- read.table(unz(temp, "activity.csv"))
unlink(temp)
temp <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip",temp)
unzdata<- unzip(temp, "activity.csv")
data1 <- read.table(unzdata, header=T,sep=",")
unlink(temp)
temp <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip",temp)
unzdata<- unzip(temp, "activity.csv")
data1 <- read.table(unzdata, header=T,sep=",")
unlink(temp)
temp
unzdata
temp <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip",temp)
temp <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip",temp)
data <- read.table(unz(temp, "activity.csv"))
unlink(temp)
temp <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip",temp)
con <- unz(temp, "activity.csv")
data <- matrix(scan(con),ncol=3,byrow=TRUE)
unlink(temp)
View(data1)
con
temp
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip",temp, mode="wb")
unzip(temp, "activity.csv")
dd <- read.table("activity.csv", sep="," header=T)
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip",temp, mode="wb")
unzip(temp, "activity.csv")
dd <- read.table("activity.csv", sep=",", header=T)
View(dd)
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip",temp, mode="wb")
unzip(temp, "activity.csv")
dd2 <- read.table("activity.csv", sep=",", header=T)
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip",temp, mode="wb")
unzip(temp, "activity.csv")
dd2 <- read.table("activity.csv", sep=",", header=T)
unlink(temp)
```{r, echo=TRUE}
temp <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", temp, mode="wb")
unzip(temp, "activity.csv")
dd <- read.table("activity.csv", sep=",", header=T)
unlink(temp)
`
url <- "http://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(url, "repdata-data-activity.zip", mode="wb")
unzip("repdata-data-activity.zip")
temp <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", temp, mode="wb")
unzip(temp, "activity.csv")
dd <- read.table("activity.csv", sep=",", header=T)
unlink(temp)
temp <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", temp, mode="wb")
unzip(temp, "activity.csv")
dd <- read.table("activity.csv", sep=",", header=T)
unlink(temp)
```{r, echo=TRUE}
temp <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", temp, mode="wb")
unzip(temp, "activity.csv")
dd34 <- read.table("activity.csv", sep=",", header=T)
unlink(temp)
setInternet2(use = TRUE)
temp <- tempfile()
url<-"https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(url, temp, mode="wb")
unzip(temp, "activity.csv")
dd36 <- read.table("activity.csv", sep=",", header=T)
unlink(temp)
```
dd36
data1
setInternet2(use = TRUE)
temp <- tempfile()
url<-"https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(url, temp, mode="wb")
unzip(temp, "activity.csv")
data1 <- read.table("activity.csv", sep=",", header=T)
unlink(temp)
**Data source:  Activity monitoring data**
a)
##total<-tapply(active$steps,  )
##total<-tapply(active$steps,  )
attr(total)
plot(timeint, totalinter, type="l")
#plot(timeint, totalinter, type="l")
seq(c(ISOdate(2012,10,1)), by = "5 mins", length.out = 288)
seq(c(ISOdate(2012,10,1, 0, 0)), by = "5 mins", length.out = 288)
seq(c(ISOdatetime(2012,10,1, 0, 0)), by = "5 mins", length.out = 288)
seq(c(ISOdatetime(2012,10,1, 0, 0)), by = "5 mins", length.out = 288)
seq(c(ISOdate(2012,10,1, 0, 0)), by = "5 mins", length.out = 288)
seq(c(ISOdate(2012,10,1, 0, 0, 0)), by = "5 mins", length.out = 288)
seq(c(ISOdatetime(2012,10,1, 0, 0, 0)), by = "5 mins", length.out = 288)
#Download data directly from winzip weblink
setInternet2(use = TRUE) #enable use of IE
temp <- tempfile()
url<-"https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
download.file(url, temp, mode="wb")
unzip(temp, "summarySCC_PM25.rds")
unzip(temp, "Source_Classification_Code.rds")
unlink(temp)
#store data from the files as objects/ dataframes in R
nei <- readRDS("summarySCC_PM25.rds")
scc <- readRDS("Source_Classification_Code.rds")
#observe structure and characteristics of the datasets
str(nei)
colSums(is.na(nei))
str(scc)
colSums(is.na(scc))
#print first and last observations from each data frame
head(nei)
tail(nei)
head(scc)
tail(scc)
#Subset data for Baltimore
nei$years <-as.factor(nei$year)  # convert year to a factor
nei$type <-as.factor(nei$type)  # convert type to a factor
neiBalti<-subset(nei, fips == 24510)
str(neiBalti)
head(neiBalti)
tail(neiBalti)
#Aggregate PM values by year and source type
neiBalti_type<-aggregate(neiBalti$Emissions,
list(Year = neiBalti$years, Type_Source = neiBalti$type),
sum)
str(neiBalti_type)
neiBalti_type
neiBalti_type$Year<- as.numeric(as.character(neiBalti_type$Year)) #convert year to numerical
str(neiBalti_type)
neiBalti_type
#Create plot using aggregate data - plot total PM by year and source type
png("plot3-pr2.png")
ggplot(neiBalti_type, aes(Year,x)) + geom_point(aes(x=Year, y=x)) +
facet_wrap(~Type_Source) +
labs(title = "Emissions by Source in Baltimore City, 1999-2008") +
labs(y = expression("Total "*PM[2.5]))+
geom_smooth(method="lm")
dev.off()
#Download data directly from winzip weblink
setInternet2(use = TRUE) #enable use of IE
temp <- tempfile()
url<-"https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
download.file(url, temp, mode="wb")
unzip(temp, "summarySCC_PM25.rds")
unzip(temp, "Source_Classification_Code.rds")
unlink(temp)
#store data from the files as objects/ dataframes in R
nei <- readRDS("summarySCC_PM25.rds")
scc <- readRDS("Source_Classification_Code.rds")
#observe structure and characteristics of the datasets
str(nei)
colSums(is.na(nei))
str(scc)
colSums(is.na(scc))
#print first and last observations from each data frame
head(nei)
tail(nei)
head(scc)
tail(scc)
#Subset data for Baltimore
nei$years <-as.factor(nei$year)  # convert year to a factor
nei$type <-as.factor(nei$type)  # convert type to a factor
neiBalti<-subset(nei, fips == 24510)
str(neiBalti)
head(neiBalti)
tail(neiBalti)
#Aggregate PM values by year and source type
neiBalti_type<-aggregate(neiBalti$Emissions,
list(Year = neiBalti$years, Type_Source = neiBalti$type),
sum)
str(neiBalti_type)
neiBalti_type
neiBalti_type$Year<- as.numeric(as.character(neiBalti_type$Year)) #convert year to numerical
str(neiBalti_type)
neiBalti_type
#Create plot using aggregate data - plot total PM by year and source type
library(ggplot2)
png("plot3-pr2.png")
ggplot(neiBalti_type, aes(Year,x)) + geom_point(aes(x=Year, y=x)) +
facet_wrap(~Type_Source) +
labs(title = "Emissions by Source in Baltimore City, 1999-2008") +
labs(y = expression("Total "*PM[2.5]))+
geom_smooth(method="lm")
dev.off()
ggplot(neiBalti_type, aes(Year,x)) + geom_point(aes(x=Year, y=x)) +
facet_wrap(~Type_Source) +
labs(title = "Emissions by Source in Baltimore City, 1999-2008") +
labs(y = expression("Total "*PM[2.5]))+
geom_smooth(method="lm")
ggplot(neiBalti_type, aes(Year,x)) + geom_point(aes(x=Year, y=x)) +
facet_wrap(~Type_Source) +
labs(title = "Emissions by Source in Baltimore City, 1999-2008") +
labs(y = expression("Total "*PM[2.5]))+
geom_smooth(method="lm") +
theme(text = element_text(size=11))
#Create plot using aggregate data - plot total PM by year and source type
library(ggplot2)
png("plot3-pr2.png")
ggplot(neiBalti_type, aes(Year,x)) + geom_point(aes(x=Year, y=x)) +
facet_wrap(~Type_Source) +
labs(title = "Emissions by Source in Baltimore City, 1999-2008") +
labs(y = expression("Total "*PM[2.5]))+
geom_smooth(method="lm") +
theme(text = element_text(size=11))
dev.off()
#Create plot using aggregate data - plot total PM by year and source type
library(ggplot2)
setwd("C:/Users/tariyaratne/Documents/Exploratory Data Analysis/Course Project 2")
png("plot3-pr2.png")
ggplot(neiBalti_type, aes(Year,x)) + geom_point(aes(x=Year, y=x)) +
facet_wrap(~Type_Source) +
labs(title = "Emissions by Source in Baltimore City, 1999-2008") +
labs(y = expression("Total "*PM[2.5]))+
geom_smooth(method="lm") +
theme(text = element_text(size=11))
dev.off()
str(us_coal)
us_coal
us_coal$Year<-as.numeric(as.character(us_coal$Year)) # convert year to a numeric var
#Create plot using aggregate data - plot total PM by year and source type
library(ggplot2)
setwd("C:/Users/tariyaratne/Documents/Exploratory Data Analysis/Course Project 2")
png("plot4-pr2.png")
ggplot(us_coal, aes(Year, x)) + geom_point(aes(x=Year, y=x)) +
labs(title = "Emissions by Coal Combustion Related Sources in the U.S., 1999-2008") +
labs(y = expression("Total "*PM[2.5]))+
geom_smooth(method="lm")+
theme(text = element_text(size=11))
dev.off()
#Download data directly from winzip weblink
setInternet2(use = TRUE) #enable use of IE
temp <- tempfile()
url<-"https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
download.file(url, temp, mode="wb")
unzip(temp, "summarySCC_PM25.rds")
unzip(temp, "Source_Classification_Code.rds")
unlink(temp)
#store data from the files as objects/ dataframes in R
nei <- readRDS("summarySCC_PM25.rds")
scc <- readRDS("Source_Classification_Code.rds")
#observe structure and characteristics of the df NEI
str(nei)
colSums(is.na(nei))
head(nei)
tail(nei)
#observe structure and characteristics of the df SCC
str(scc) #eyeball the different levels to find most appropriate var classifying coal combustion sources
colSums(is.na(scc))
head(scc)
tail(scc)
#find the source codes relating to coal combustion from the scc dataset
coalcomb <-subset(scc,grepl("Coal", scc$EI.Sector)) #subset by all "coal-related" fuel combustion sources
str(coalcomb)                                       #make note of structure of subsetted data
head(coalcomb)
tail(coalcomb)
factor(coalcomb$SCC)                                #note the number of levels (=99) of coal combust sources
cc <- coalcomb[,c("SCC", "Short.Name")]             #make a df "cc" containing uique digital string codes relating to coal comb sources
View(cc)
#Prepare data for plotting:  Merge cc and NEI data frames - new dataframe will only contain data relating to coal combustion-related sources
str(nei)
str(cc)
nei_merge<-merge(nei, cc, by="SCC")
str(nei_merge)
nei_merge$year <-as.factor(nei_merge$year)  # convert year to a factor
nei_merge$SCC <-as.factor(nei_merge$SCC)  # convert SCC to a factor
str(nei_merge)
View(nei_merge)
#Aggregate PM values by year and coal source type
us_coal<-aggregate(nei_merge$Emissions,
list(Year = nei_merge$year),
sum)
str(us_coal)
us_coal
us_coal$Year<-as.numeric(as.character(us_coal$Year)) # convert year to a numeric var
#Create plot using aggregate data - plot total PM by year and source type
library(ggplot2)
setwd("C:/Users/tariyaratne/Documents/Exploratory Data Analysis/Course Project 2")
png("plot4-pr2.png")
ggplot(us_coal, aes(Year, x)) + geom_point(aes(x=Year, y=x)) +
labs(title = "Emissions by Coal Combustion Related Sources in the U.S., 1999-2008") +
labs(y = expression("Total "*PM[2.5]))+
geom_smooth(method="lm")+
theme(text = element_text(size=11))
dev.off()
ggplot(neiBalti_type, aes(Year,x)) + geom_point(aes(x=Year, y=x)) +
facet_wrap(~Type_Source) +
labs(title = "Emissions by Source in Baltimore City, 1999-2008") +
labs(y = expression("Total "*PM[2.5]))+
geom_smooth(method="lm") +
library(ggplot2)
setwd("C:/Users/tariyaratne/Documents/Exploratory Data Analysis/Course Project 2") #save to direct
png("plot3-pr2.png")
ggplot(neiBalti_type, aes(Year,x)) + geom_point(aes(x=Year, y=x)) +
facet_wrap(~Type_Source) +
labs(title = "Emissions by Source in Baltimore City, 1999-2008") +
labs(y = expression("Total "*PM[2.5]))+
geom_smooth(method="lm") +
dev.off()
library(ggplot2)
setwd("C:/Users/tariyaratne/Documents/Exploratory Data Analysis/Course Project 2") #save to direct
png("plot3-pr2.png")
ggplot(neiBalti_type, aes(Year,x)) + geom_point(aes(x=Year, y=x)) +
facet_wrap(~Type_Source) +
labs(title = "Emissions by Source in Baltimore City, 1999-2008") +
labs(y = expression("Total "*PM[2.5]))+
geom_smooth(method="lm") +
dev.off()
library(ggplot2)
setwd("C:/Users/tariyaratne/Documents/Exploratory Data Analysis/Course Project 2") #save to direct
ggplot(neiBalti_type, aes(Year,x)) + geom_point(aes(x=Year, y=x)) +
facet_wrap(~Type_Source) +
labs(title = "Emissions by Source in Baltimore City, 1999-2008") +
labs(y = expression("Total "*PM[2.5]))+
geom_smooth(method="lm")
dev.off()
#Create plot using aggregate data - plot total PM by year and source type
library(ggplot2)
setwd("C:/Users/tariyaratne/Documents/Exploratory Data Analysis/Course Project 2") #save to direct
png("plot3-pr2.png")
ggplot(neiBalti_type, aes(Year,x)) + geom_point(aes(x=Year, y=x)) +
facet_wrap(~Type_Source) +
labs(title = "Emissions by Source in Baltimore City, 1999-2008") +
labs(y = expression("Total "*PM[2.5]))+
geom_smooth(method="lm") +
theme(text = element_text(size=11))
dev.off()
knit2html("PA1_template.Rmd")
knit2html(PA1_template.Rmd)
library(knitr)
knit2html(PA1_template.Rmd)
setwd(C:/Users/tariyaratne/Documents/Reproducible Research/RR CourseProject 1/Submit - RR CourseProject 1)
setwd("C:/Users/tariyaratne/Documents/Reproducible Research/RR CourseProject 1/Submit - RR CourseProject 1")
knit2html(PA1_template.Rmd)
knit2html("PA1_template.Rmd")
